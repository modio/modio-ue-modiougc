"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[1477],{4283:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var i=n(4848),s=n(8453),r=n(7064),a=n(9236);const o={id:"getting-started",title:"Getting Started",slug:"/unreal/modio-ugc/getting-started/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioUGC/Doc/doc_root/en-us/modio-ugc/getting-started.mdx"},d=void 0,l={id:"modio-ugc/getting-started",title:"Getting Started",description:"The ModioUGC plugin is composed of two core components: UUGCSubsystem, which handles UGC discovery and loading, and IUGCProvider, which interacts with UGC providers to determine availability and locate UGC packages.",source:"@site/public/en-us/modio-ugc/getting-started.mdx",sourceDirName:"modio-ugc",slug:"/unreal/modio-ugc/getting-started/",permalink:"/unreal/modio-ugc/getting-started/",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioUGC/Doc/doc_root/en-us/modio-ugc/getting-started.mdx",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting Started",slug:"/unreal/modio-ugc/getting-started/",custom_edit_url:"https://github.com/modio/modio-ue4-internal/tree/main/Plugins/ModioUGC/Doc/doc_root/en-us/modio-ugc/getting-started.mdx"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/unreal/modio-ugc/overview/"},next:{title:"Troubleshooting",permalink:"/unreal/modio-ugc/troubleshooting/"}},c={},h=[{value:"UGC Subsystem",id:"ugc-subsystem",level:2},{value:"Responsibilities",id:"responsibilities",level:3},{value:"Key Methods",id:"key-methods",level:3},{value:"UGC Provider",id:"ugc-provider",level:2},{value:"Example",id:"example",level:3},{value:"Included Providers",id:"included-providers",level:3},{value:"Initialization",id:"initialization",level:2},{value:"Manual",id:"manual",level:3},{value:"Automatic",id:"automatic",level:3},{value:"Mounting and registering UGC assets",id:"mounting-and-registering-ugc-assets",level:2},{value:"Accessing Assets",id:"accessing-assets",level:2},{value:"Using the Asset Manager",id:"using-the-asset-manager",level:3},{value:"Using the Asset Registry",id:"using-the-asset-registry",level:3},{value:"Creating UGC",id:"creating-ugc",level:2},{value:"Required Metadata",id:"required-metadata",level:3},{value:"Packaging UGC",id:"packaging-ugc",level:2},{value:"In-editor testing",id:"in-editor-testing",level:2}];function u(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["The ModioUGC plugin is composed of two core components: ",(0,i.jsx)(t.code,{children:"UUGCSubsystem"}),", which handles UGC discovery and loading, and ",(0,i.jsx)(t.code,{children:"IUGCProvider"}),", which interacts with UGC providers to determine availability and locate UGC packages."]}),"\n",(0,i.jsx)(t.h2,{id:"ugc-subsystem",children:"UGC Subsystem"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"UGC Subsystem"})," is the central system that powers the ModioUGC plugin. Its lifetime is automatically managed by the engine, offering a convenient and reliable entry point for interacting with the plugin's functionality."]}),"\n",(0,i.jsx)(t.h3,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,i.jsx)(t.p,{children:"The UGC Subsystem is broadly responsible for:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Managing the plugin lifecycle (initialization and teardown)"}),"\n",(0,i.jsx)(t.li,{children:"Setting and initializing UGC provider(s)"}),"\n",(0,i.jsx)(t.li,{children:"Discovering and loading UGC packages"}),"\n",(0,i.jsx)(t.li,{children:"Refreshing UGC availability on demand"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"key-methods",children:"Key Methods"}),"\n",(0,i.jsx)(t.p,{children:"The subsystem provides the following key methods:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"SetUGCProvider"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"InitializeUGCProvider"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"RefreshUGC"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.code,{children:"UnloadAllUGCPackages"})}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"These methods are used to configure and control the discovery and loading of UGC. Additional helper methods are also available for interacting with other aspects of the system."}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"The UGC Subsystem itself is managed automatically by the engine, so manual instantiation is not required."})}),"\n",(0,i.jsx)(t.h2,{id:"ugc-provider",children:"UGC Provider"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"IUGCProvider"})," interface is responsible for supplying information about the UGC content to be mounted. Depending on your game's architecture, you may use a single provider or aggregate multiple providers into one."]}),"\n",(0,i.jsxs)(t.p,{children:["The core method, ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"}),", defines the directories the system should scan to discover UGC. These paths must point to locations containing a ",(0,i.jsx)(t.code,{children:".uplugin"})," file alongside its associated UGC files (e.g., ",(0,i.jsx)(t.code,{children:".pak"}),", ",(0,i.jsx)(t.code,{children:".ucas"}),", ",(0,i.jsx)(t.code,{children:".utoc"}),") within a ",(0,i.jsx)(t.code,{children:"Content"})," directory."]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["If your ",(0,i.jsx)(t.code,{children:".uplugin"})," file is located at ",(0,i.jsx)(t.code,{children:"C:\\MyUGCFolder\\RedSpaceship.uplugin"})," and the UGC files are located in ",(0,i.jsx)(t.code,{children:"C:\\MyUGCFolder\\Content\\Paks\\Windows\\"}),", then the path returned by ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"})," should be ",(0,i.jsx)(t.code,{children:"C:\\MyUGCFolder"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"included-providers",children:"Included Providers"}),"\n",(0,i.jsx)(t.p,{children:"The plugin includes two example implementations:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"UModioUGCProvider"})}),(0,i.jsx)(t.br,{}),"\n","This is the default provider. It can automatically initialize the mod.io service (if enabled in the ModioUGC settings) and returns installed UGC paths from the mod.io user installation directory using ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"USideLoadUGCProvider"})}),(0,i.jsx)(t.br,{}),"\n","This sample provider returns a specific directory path for sideloading UGC. It's useful for testing during development without needing to initialize or authenticate with mod.io."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["You can implement your own custom provider by inheriting from ",(0,i.jsx)(t.code,{children:"IUGCProvider"})," and overriding the ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"})," method to suit your game's content workflow."]})}),"\n",(0,i.jsxs)(r.A,{"group-id":"languages",children:[(0,i.jsxs)(a.A,{value:"blueprint",label:"Blueprint",children:[(0,i.jsxs)(t.p,{children:["When using Blueprint, subclass ",(0,i.jsx)(t.code,{children:"UObject"})," and implement the ",(0,i.jsx)(t.code,{children:"IUGCProvider"})," interface. The following functions should be implemented: ",(0,i.jsx)(t.code,{children:"InitializeProvider"}),", ",(0,i.jsx)(t.code,{children:"DeinitializeProvider"}),", ",(0,i.jsx)(t.code,{children:"IsProviderEnabled"}),", and ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"}),"."]}),(0,i.jsxs)(t.p,{children:["Ensure two dispatchers are created with appropriate checks for your provider, ",(0,i.jsx)(t.code,{children:"InitializeProvider_Dispatcher"})," and ",(0,i.jsx)(t.code,{children:"DeinitializeProvider_Dispatcher"}),". In this case we're just returning an immediate success."]}),(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"Initialize and deinitialize provider dispatchers",src:n(9245).A+"",width:"454",height:"347"}),"\r\n",(0,i.jsx)(t.img,{alt:"Initialize and deinitialize provider delegates binding",src:n(6457).A+"",width:"1115",height:"424"})]}),(0,i.jsxs)(t.p,{children:["Implement ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"})," to return the UGC path representing the packaged UGC.\r\nFor example the mod.io user installations:"]}),(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"GetInstalledUGCPaths mod.io implementation",src:n(1371).A+"",width:"1793",height:"337"})}),(0,i.jsxs)(t.p,{children:["Or a side load directory, which can be useful during development:\r\n",(0,i.jsx)(t.img,{alt:"GetInstalledUGCPaths sideload implementation",src:n(8366).A+"",width:"1153",height:"258"})]})]}),(0,i.jsxs)(a.A,{value:"c++",label:"C++",default:!0,children:[(0,i.jsxs)(t.p,{children:["Implement ",(0,i.jsx)(t.code,{children:"GetInstalledUGCPaths"})," to return the UGC path representing the packaged UGC.\r\nFor example the mod.io user installations:"]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"FModUGCPathMap UMyUGCProvider::GetInstalledUGCPaths_Implementation()\r\n{\r\n   TMap<FString, FGenericModID> UGCPathsToModIDs;\r\n   if (UModioSubsystem* Subsystem = GEngine->GetEngineSubsystem<UModioSubsystem>())\r\n   {\r\n   \tTMap<FModioModID, FModioModCollectionEntry> InstalledMods = Subsystem->QueryUserInstallations(true);\r\n   \tfor (const TPair<FModioModID, FModioModCollectionEntry>& Mod : InstalledMods)\r\n   \t{\r\n   \t\tUGCPathsToModIDs.Add(Mod.Value.GetPath(), FGenericModID(GetUnderlyingValue(Mod.Key)));\r\n   \t}\r\n   }\r\n   return FModUGCPathMap(MoveTemp(UGCPathsToModIDs));\r\n}\n"})}),(0,i.jsx)(t.p,{children:"Or a side load directory, which can be useful during development:"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'FModUGCPathMap UMyUGCProvider::GetInstalledUGCPaths_Implementation()\r\n{\r\n   TMap<FString, FGenericModID> UGCPathsToModIDs;\r\n\r\n   // Scan folder for mods\r\n   const FString BaseModsPath = TEXT("PathToMySideLoadDirectory");\r\n   const FString ModsPathSearch = BaseModsPath / TEXT("*");\r\n\r\n   IFileManager& FileManager = IFileManager::Get();\r\n   TArray<FString> OutFolders;\r\n   FileManager.FindFiles(OutFolders, *ModsPathSearch, false, true);\r\n\r\n   for (const FString& Folder : OutFolders)\r\n   {\r\n   \tUGCPathsToModIDs.Add(BaseModsPath / Folder, FGenericModID());\r\n   }\r\n\r\n   return FModUGCPathMap(MoveTemp(UGCPathsToModIDs));\r\n}\n'})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(t.h3,{id:"manual",children:"Manual"}),"\n",(0,i.jsx)(t.p,{children:"The general expectation is your game will handle the initialization of ModioUGC providers when appropriate."}),"\n",(0,i.jsxs)(r.A,{"group-id":"languages",children:[(0,i.jsx)(a.A,{value:"blueprint",label:"Blueprint",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Initialize UGC Provider",src:n(1974).A+"",width:"1121",height:"289"})})}),(0,i.jsx)(a.A,{value:"c++",label:"C++",default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:"    UUGCSubsystem* UGCSubsystem = GEngine->GetEngineSubsystem<UUGCSubsystem>();\r\n    if (UGCSubsystem)\r\n    {\r\n        UGCSubsystem->SetUGCProvider(NewObject<UMyCustomGame_UGCProvider>(this));\r\n\r\n        FOnUGCProviderInitializedDelegate Handler;\r\n        // Optionally bind a callback to handle the success/failure of the provider initialization\r\n        Handler.BindDynamic(this, &UMyCustomGameSubsystem::OnUGCProviderInitialized);\r\n        UGCSubsystem->InitializeUGCProvider(Handler);\r\n    }\n"})})})]}),"\n",(0,i.jsx)(t.h3,{id:"automatic",children:"Automatic"}),"\n",(0,i.jsxs)(t.p,{children:["There is also an option to automatically perform initialization. This will create and set a new ",(0,i.jsx)(t.code,{children:"UModioUGCProvider"})," object as soon as the UGC Subsystem initializes."]}),"\n",(0,i.jsxs)(t.p,{children:["Navigate to ",(0,i.jsx)(t.strong,{children:"Edit > Project Settings > Plugins > mod.io UGC"})," and check the ",(0,i.jsx)(t.strong,{children:"Auto Initialize UGC Provider"})," option.\r\n",(0,i.jsx)(t.img,{alt:"Auto Initialize UGC Provider",src:n(6071).A+"",width:"1031",height:"562"})]}),"\n",(0,i.jsx)(t.h2,{id:"mounting-and-registering-ugc-assets",children:"Mounting and registering UGC assets"}),"\n",(0,i.jsx)(t.p,{children:"Once both the UGC Subsystem and your UGC Provider have been initialized, the system will automatically attempt to discover UGC when the Unreal Asset Manager is spawned. If the Asset Manager is already available, discovery begins immediately."}),"\n",(0,i.jsx)(t.p,{children:"During this step, the system:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Uses the paths provided by your ",(0,i.jsx)(t.code,{children:"IUGCProvider"})]}),"\n",(0,i.jsx)(t.li,{children:"Discovers valid UGC packages"}),"\n",(0,i.jsxs)(t.li,{children:["Finds and mounts the contained ",(0,i.jsx)(t.code,{children:".pak"})," files"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["To trigger discovery manually, you can call ",(0,i.jsx)(t.code,{children:"RefreshUGC"})," on the UGC Subsystem. This will re-scan for new UGC and unload any previously mounted UGC that is no longer available. This is useful, for example, after installing or uninstalling content via the UGC browser."]}),"\n",(0,i.jsx)(t.p,{children:"Once UGC has been successfully discovered and mounted, you are free to access the assets it contains."}),"\n",(0,i.jsx)(t.h2,{id:"accessing-assets",children:"Accessing Assets"}),"\n",(0,i.jsxs)(t.p,{children:["Once a UGC package is successfully mounted, you can access the assets within it using the following functions from the ",(0,i.jsx)(t.code,{children:"UGCSubsystem"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"EnumerateAllUGCPackages"})}),": This function invokes the provided functor on every UGC package in the registry. It is the only method to directly access the UGC packages."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:(0,i.jsx)(t.code,{children:"GetUGCPackageByModID"})}),": This function retrieves a UGC package by its mod ID."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Additionally, the assets are now registered with the ",(0,i.jsx)(t.code,{children:"AssetManager"})," and appended to the ",(0,i.jsx)(t.code,{children:"AssetRegistry"}),", which allows you to query them based on asset type. For instance, if your UGC includes maps, you can easily find them by querying for map assets."]}),"\n",(0,i.jsx)(t.h3,{id:"using-the-asset-manager",children:"Using the Asset Manager"}),"\n",(0,i.jsxs)(t.p,{children:["To query assets (for example maps) through the ",(0,i.jsx)(t.code,{children:"AssetManager"}),", use the following approach:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'\tTArray<TSoftObjectPtr<UObject>> MapList;\r\n\tUAssetManager& AssetManager = UAssetManager::Get();\r\n\tTArray<FPrimaryAssetId> OutAssetIDs;\r\n\tAssetManager.GetPrimaryAssetIdList(FPrimaryAssetType("Map"), OutAssetIDs);\r\n\tfor (FPrimaryAssetId AssetID : OutAssetIDs)\r\n\t{\r\n\t\tFAssetData AssetData;\r\n\t\tAssetManager.GetPrimaryAssetData(AssetID, AssetData);\r\n\r\n\t\tif (AssetData.IsValid())\r\n\t\t{\r\n\t\t\tMapList.Add(TSoftObjectPtr<UObject>(AssetData.GetAsset()));\r\n\t\t}\r\n\t}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"using-the-asset-registry",children:"Using the Asset Registry"}),"\n",(0,i.jsxs)(t.p,{children:["Alternatively, you can use the ",(0,i.jsx)(t.code,{children:"AssetRegistry"})," like so:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-cpp",children:'\tTArray<TSoftObjectPtr<UObject>> MapList;\r\n\tFAssetRegistryModule& AssetRegistryModule =\r\n\t\tFModuleManager::LoadModuleChecked<FAssetRegistryModule>("AssetRegistry");\r\n\tIAssetRegistry& AssetRegistry = AssetRegistryModule.Get();\r\n\r\n\tFARFilter ARFilter;\r\n\tTArray<FAssetData> AssetList;\r\n\tARFilter.ClassPaths.Add(UWorld::StaticClass()->GetClassPathName());\r\n\tARFilter.bIncludeOnlyOnDiskAssets = true; // This is important, otherwise UGC assets will not be found\r\n    // Any other filter requirements\r\n\r\n\tFARCompiledFilter CompiledFilter;\r\n\tIAssetRegistry::Get()->CompileFilter(ARFilter, CompiledFilter);\r\n\r\n\tTArray<FAssetData> AssetDataArray;\r\n\tAssetRegistry.GetAssets(ARFilter, AssetDataArray);\r\n\r\n\tfor (const FAssetData& AssetData : AssetDataArray)\r\n\t{\r\n\t\tMapList.Add(TSoftObjectPtr<UObject>(AssetData.GetAsset()));\r\n\t}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"creating-ugc",children:"Creating UGC"}),"\n",(0,i.jsx)(t.p,{children:"The ModioUGC plugin includes additional editor tooling to facilitate the creation and packaging of UGC content for deployment."}),"\n",(0,i.jsxs)(t.p,{children:["Clicking the ",(0,i.jsx)(t.strong,{children:"mod.io"})," button in the editor's top toolbar then selecting ",(0,i.jsx)(t.strong,{children:"Create & Upload"})," will open the mod.io editor window."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Create and Upload",src:n(8417).A+"",width:"1075",height:"210"})}),"\n",(0,i.jsxs)(t.p,{children:["From here, you can select the ",(0,i.jsx)(t.strong,{children:"Create UGC"})," button to open a wizard for creating a content-only UGC plugin."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Creating a new UGC",src:n(678).A+"",width:"1386",height:"133"})}),"\n",(0,i.jsx)(t.p,{children:"This process generates a new plugin structure for your UGC package. When creating content, avoid dependencies on engine assets, as this can cause issues during packaging."}),"\n",(0,i.jsx)(t.p,{children:"After the UGC is created, content can be added by creating new assets or importing existing ones. This process is typically performed by UGC creators using the Unreal Editor or your provided mod kit, etc."}),"\n",(0,i.jsx)(t.h3,{id:"required-metadata",children:"Required Metadata"}),"\n",(0,i.jsxs)(t.p,{children:["Each UGC package must include a ",(0,i.jsx)(t.code,{children:"UUGC_Metadata"})," data asset, which is automatically generated during the creation process. This metadata defines:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.strong,{children:"primary asset type"})]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.strong,{children:"base asset class"})]}),"\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.strong,{children:"content path"}),", usually set to the name of your UGC folder (since all assets should reside within it)"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For example, if you're creating a new UGC map, it should match a defined primary asset type in your project's ",(0,i.jsx)(t.code,{children:"AssetManager"})," settings to ensure it can be discovered and loaded correctly."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"UGC Metadata data asset",src:n(6302).A+"",width:"625",height:"541"}),"\r\n",(0,i.jsx)(t.img,{alt:"Asset Manager primary asset types",src:n(5897).A+"",width:"1031",height:"541"})]}),"\n",(0,i.jsx)(t.h2,{id:"packaging-ugc",children:"Packaging UGC"}),"\n",(0,i.jsx)(t.p,{children:"The ModioUGC plugin provides a second editor tool for packaging UGC content as a cooked DLC plugin for a selected platform."}),"\n",(0,i.jsxs)(t.p,{children:["Clicking the ",(0,i.jsx)(t.strong,{children:"mod.io"})," button in the editor's top toolbar then selecting ",(0,i.jsx)(t.strong,{children:"Create & Upload"})," will open the mod.io editor window."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Create and Upload",src:n(8417).A+"",width:"1075",height:"210"})}),"\n",(0,i.jsxs)(t.p,{children:["From here, you can select the ",(0,i.jsx)(t.strong,{children:"Package UGC"})," button to open a dialog where you can select the UGC plugin and the target platform for packaging."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Packaging a UGC",src:n(7392).A+"",width:"1369",height:"120"})}),"\n",(0,i.jsx)(t.p,{children:"Once the packaging process is complete, a folder is generated containing:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:".uplugin"})," file"]}),"\n",(0,i.jsxs)(t.li,{children:["A ",(0,i.jsx)(t.code,{children:"Content"})," directory with:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:".pak"})," file"]}),"\n",(0,i.jsxs)(t.li,{children:["(If Io Store is enabled) ",(0,i.jsx)(t.code,{children:".ucas"})," and ",(0,i.jsx)(t.code,{children:".utoc"})," files"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This folder represents the packaged UGC and is ready to be mounted by the ModioUGC runtime."}),"\n",(0,i.jsxs)(t.p,{children:["You can also compress this folder into a ",(0,i.jsx)(t.code,{children:".zip"})," archive to upload to ",(0,i.jsx)(t.a,{href:"https://mod.io",children:"mod.io"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.img,{alt:"Compressing the UGC",src:n(8972).A+"",width:"796",height:"515"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.img,{alt:"Uploading the UGC",src:n(5915).A+"",width:"959",height:"415"})]}),"\n",(0,i.jsx)(t.h2,{id:"in-editor-testing",children:"In-editor testing"}),"\n",(0,i.jsx)(t.p,{children:"Testing can also be performed in-editor, although it is disabled by default. To enable it:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Navigate to ",(0,i.jsx)(t.strong,{children:"Edit > Project Settings > Engine -> Cooker"})," and check the ",(0,i.jsx)(t.strong,{children:"Allow Cooked Content In The Editor"})," option."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Allowing Cooked Content In The Editor",src:n(4790).A+"",width:"1100",height:"594"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Navigate to ",(0,i.jsx)(t.strong,{children:"Edit > Project Settings > Plugins > UGC Settings"})," and check the ",(0,i.jsx)(t.strong,{children:"Enable UGC Provider in Editor"})," option."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Enabling UGC Provider in Editor",src:n(5564).A+"",width:"1100",height:"594"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:'Open up your DefaultEngine.ini config file and add allowing unversioned content in editor to the Cooker Settings"'}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-text",children:"[/Script/UnrealEd.CookerSettings]\r\ns.AllowUnversionedContentInEditor=True\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"A current limitation for in-editor testing requires the project to have Io Store disabled both when creating the UGC, as well as when attempting to load it."})}),"\n",(0,i.jsxs)(t.p,{children:["To disable the Io Store, navigate to ",(0,i.jsx)(t.strong,{children:"Edit > Project Settings > Packaging"})," and set the ",(0,i.jsx)(t.strong,{children:"Use Io Store"})," option to ",(0,i.jsx)(t.strong,{children:"False"}),"."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Disabling the Io Store",src:n(970).A+"",width:"1100",height:"594"})}),"\n",(0,i.jsx)(t.p,{children:"Also, please note that it's not possible to run the project with UGC packaged with Io Store enabled, and vice versa. UGC must be packaged with the same Io Store setting as the project."})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var i=n(8215);const s={tabItem:"tabItem_Ymn6"};var r=n(4848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,a),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>v});var i=n(6540),s=n(8215),r=n(3104),a=n(6347),o=n(205),d=n(7485),l=n(1682),c=n(679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:s}}=e;return{value:t,label:n,attributes:i,default:s}}))}(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,d.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=u(e),[a,d]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:r}))),[l,h]=p({queryString:n,groupId:s}),[m,j]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,c.Dv)(n);return[s,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),x=(()=>{const e=l??m;return g({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{x&&d(x)}),[x]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);d(e),h(e),j(e)}),[h,j,r]),tabValues:r}}var j=n(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(4848);function f(e){let{className:t,block:n,selectedValue:i,selectValue:a,tabValues:o}=e;const d=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),c=e=>{const t=e.currentTarget,n=d.indexOf(t),s=o[n].value;s!==i&&(l(t),a(s))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>d.push(e),onKeyDown:h,onClick:c,...r,className:(0,s.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function y(e){let{lazy:t,children:n,selectedValue:s}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function C(e){const t=m(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,b.jsx)(f,{...t,...e}),(0,b.jsx)(y,{...t,...e})]})}function v(e){const t=(0,j.A)();return(0,b.jsx)(C,{...e,children:h(e.children)},String(t))}},9236:(e,t,n)=>{n.d(t,{A:()=>r});var i=n(9365),s=(n(6540),n(4848));function r(e){return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(i.A,{className:"tw-rounded-md",...e})})}},7064:(e,t,n)=>{n.d(t,{A:()=>r});var i=n(1470),s=(n(6540),n(4848));function r(e){return(0,s.jsx)("div",{className:"tw-border tw-border-solid tw-border-skyblue tw-rounded-md tw-bg-darkslategray tw-p-4 tw-mb-4",children:(0,s.jsx)(i.A,{...e})})}},678:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create-ugc-button-4124823c877fba8a53874b9203fc07e8.jpg"},8417:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/create_ugc-1ab505a25b872c5933f416ca6a2fd81a.jpg"},6302:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/ugc_metadata_1-7ce63f20e37cdf8b72f7b90ec9f27d9e.jpg"},5897:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/ugc_metadata_2-76d925db0437d3630b9a1d1299b76753.jpg"},4790:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/allow_cooked_content_in_editor-0ef15345607b2b404673a98c7028e4cc.jpg"},970:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/disable_io_store-f84712b03ba35202860f91e5034b1f30.jpg"},5564:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/enable_ugc_provider_in_editor-0aeb7cb480acd1c0531dca17b4f5ccd3.jpg"},6071:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/auto-init-db49aca1c20470d0bf4213fac0ddf519.jpg"},1974:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/initialization_bp-39854fd3b15c0db04f6cfa19fcd6f333.jpg"},8972:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/compress_mod-afcb71d6376935297288c4754a551c01.jpg"},7392:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/package_ugc_button-156059a6efb0f14fc2c0ea30e6209151.jpg"},5915:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/upload_mod-09c20702f08dbb705ce5075c2409f968.jpg"},1371:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/get_installed_paths_modio-0ab307d92c72dd8db832c00a6c0fb784.jpg"},8366:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/get_installed_paths_sideload-ddc91842ebc684d23e66c877e8a42c7c.jpg"},6457:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/initialize_and_deinitialize_provider_delegates_binding-7ff81863bd1c35acf5c740daa590f986.jpg"},9245:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/initialize_and_deinitialize_provider_dispatchers-fd0b22dfcc643fcc8ea39f3ba8b9c00a.jpg"}}]);